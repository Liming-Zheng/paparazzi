<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="50" ground_alt="0" lat0="51.990634" lon0="4.376789" max_dist_from_home="500" name="Rotating wing Valkenburg" security_height="2">
  <header>
    #include "autopilot.h"
    #include "modules/datalink/datalink.h"
    #include "modules/ctrl/ctrl_windtunnel_2022.h"
</header>
  <waypoints>
    <waypoint name="HOME"  x="12.6" y="-48.7"/>
    <waypoint name="CLIMB" x="62.6" y="-80.4"/>
    <waypoint name="STDBY"  x="12.6" y="-48.7"/>
    <waypoint name="p1"     x="12.6" y="-48.7"/>
    <waypoint name="p2"     x="12.6" y="-48.7"/>
    <waypoint name="p3"     x="12.6" y="-48.7"/>
    <waypoint name="p4"     x="12.6" y="-48.7"/>
    <waypoint name="TD"     x="12.6" y="-48.7"/>
    <!-- <waypoint lat="52.169189" lon="4.410820" name="C1"/>
    <waypoint lat="52.168049" lon="4.406923" name="C2"/>
    <waypoint lat="52.166515" lon="4.408235" name="C3"/>
    <waypoint lat="52.163255" lon="4.407668" name="C4"/>
    <waypoint lat="52.161908" lon="4.410082" name="C5"/>
    <waypoint lat="52.162641" lon="4.416992" name="C6"/>
    <waypoint lat="52.164861" lon="4.427268" name="C7"/>
    <waypoint lat="52.170422" lon="4.427511" name="C8"/>
    <waypoint lat="52.172276" lon="4.424011" name="C9"/> -->
  </waypoints>
  <!-- <sectors>
    <sector color="red" name="Flyzone">
      <corner name="C1"/>
      <corner name="C2"/>
      <corner name="C3"/>
      <corner name="C4"/>
      <corner name="C5"/>
      <corner name="C6"/>
      <corner name="C7"/>
      <corner name="C8"/>
      <corner name="C9"/>
    </sector>
  </sectors> -->
  <exceptions>
    <!-- <exception cond="Or(!InsideFlyzone(GetPosX(), GetPosY()), GetPosAlt() @GT GetAltRef() + 1500) @AND !(nav_block == IndexOfBlock('Wait GPS')) @AND !(nav_block == IndexOfBlock('Geo init')) @AND !(nav_block == IndexOfBlock('Holding point'))" deroute="Holding point"/> -->
    <exception cond="datalink_time @GT 25 @AND !(nav_block == IndexOfBlock('Wait GPS')) @AND !(nav_block == IndexOfBlock('Geo init')) @AND !(nav_block == IndexOfBlock('Holding point')) @AND !(nav_block == IndexOfBlock('Standby'))" deroute="Standby"/>
  </exceptions>
  <blocks>
    <block name="Wait GPS">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid() || !state.ned_initialized_i"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetAltitudeReferenceHere()"/>
    </block>
    <block name="Holding point">
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>   
    <block name="sync_me">
      <call fun="sync_procedure()"/>
    </block>     
    <block name="Stop me3">
      <stay wp="STDBY"/>
    </block>
    <block name="Test_fun">
      <call fun="windtunnel_control()"/>
    </block>
    <block name="Stop me">
      <stay wp="STDBY"/>
    </block>
    <block name="Test_fun2">
      <call fun="skew_moment()"/>
    </block>
    <block name="Stop me2">
      <stay wp="STDBY"/>
    </block>
    <block name="Start Engine">
        <call_once fun="NavResurrect()"/>
        <attitude pitch="0" roll="0" throttle="0" until="stage_time>5" vmode="throttle"/>
    </block>
     <block name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
        <exception cond="stateGetPositionEnu_f()->z > 10.0" deroute="Standby"/>
        <call_once fun="NavSetWaypointHere(WP_CLIMB)"/>
        <stay wp="CLIMB"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
        <stay wp="STDBY"/>
    </block>
    <block name="stay_p1">
      <stay wp="p1"/>
    </block>
    <block name="go_p2">
      <call_once fun="nav_set_heading_deg(90)"/>
      <go wp="p2"/>
      <deroute block="stay_p1"/>
    </block>
    <block name="line_p1_p2">
      <go from="p1" hmode="route" wp="p2"/>
      <stay until="stage_time>10" wp="p2"/>
      <go from="p2" hmode="route" wp="p1"/>
      <deroute block="line_p1_p2"/>
    </block>
    <block name="route">
      <go from="p1" hmode="route" wp="p2"/>
      <go from="p2" hmode="route" wp="p3"/>
      <go from="p3" hmode="route" wp="p4"/>
      <go from="p4" hmode="route" wp="p1"/>
      <deroute block="route"/>
    </block>
    <block name="Oval">
      <oval p1="p1" p2="p2" radius="nav_radius"/>
    </block>
    <block name="Circle">
      <circle radius="nav_radius" wp="p1"/>
    </block>
    <block name="land here" strip_button="Land Here" strip_icon="land-right.png">
        <call_once fun="NavSetWaypointHere(WP_TD)"/>
    </block>
    <block name="land">
        <go wp="TD"/>
    </block>
    <block name="descend">
        <exception cond="!(stateGetPositionEnu_f()->z > 20.0)" deroute="flare"/>
        <stay climb="-1.0" vmode="climb" wp="TD"/>
    </block>
    <block name="flare">
        <stay climb="-0.4" vmode="climb" wp="TD"/>
        <exception cond="!(stateGetPositionEnu_f()->z > 2.0)" deroute="flare_low"/>
    </block>
    <block name="flare_low">
        <!--<exception cond="NavDetectGround()" deroute="Holding point"/>
        <exception cond="!nav_is_in_flight()" deroute="landed"/>
        <call_once fun="NavStartDetectGround()"/>-->
        <stay climb="-0.4" vmode="climb" wp="TD"/>
    </block>
    <block name="landed">
        <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
