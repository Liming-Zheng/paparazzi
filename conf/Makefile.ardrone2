# Hey Emacs, this is a -*- makefile -*-
#
# Copyright (C) 2013 The Paparazzi Team
#
# This file is part of paparazzi.
#
# paparazzi is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# paparazzi is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with paparazzi; see the file COPYING.  If not, see
# <http://www.gnu.org/licenses/>.
#

include $(PAPARAZZI_SRC)/conf/Makefile.arm-linux-toolchain

# Define OMAP A8 ARDrone2 specifc flags

FLOAT_ABI ?= -mfloat-abi=softfp
#FLOAT_ABI ?= -mfloat-abi=hard

# ARCH_CFLAGS ?= -O3 -marm  -funsafe-math-optimizations -mcpu=cortex-a8 -mtune=cortex-a8 -march=armv7-a -mfpu=neon -ftree-vectorize -ftree-vectorizer-verbose=1 -ffast-math -fomit-frame-pointer -funroll-loops
ARCH_CFLAGS ?= -O3 -marm -mstructure-size-boundary=32 -funsafe-math-optimizations -mcpu=cortex-a8 -mtune=cortex-a8 -march=armv7-a -mfpu=neon -ftree-vectorize -ftree-vectorizer-verbose=1 -funroll-loops -ffast-math 
# When -pg is used this cannot -fomit-frame-pointer

# -ffast-math is added in generic Makefile.linux later on..

# TODO: arm{?}strip -R .comment -R .note -R .note.ABI-tag ap.elf

# with armv7, unaligned data can still be read
CFLAGS += -DPPRZLINK_UNALIGNED_ACCESS=1

# add ARM specifc flags to CFLAGS, LDFLAGS
CFLAGS += $(FLOAT_ABI) $(ARCH_CFLAGS) -pg
LDFLAGS += $(FLOAT_ABI) -pg
CXXFLAGS += $(FLOAT_ABI) $(ARCH_CFLAGS) -pg

# include the common linux Makefile (common CFLAGS, actual targets)
include $(PAPARAZZI_SRC)/conf/Makefile.linux

DRONE = $(PAPARAZZI_SRC)/sw/tools/parrot/ardrone2.py

# Program the device and start it.
upload program: $(OBJDIR)/$(TARGET).elf
	$(Q)$(DRONE) --host=$(HOST) upload_file_and_run $(OBJDIR)/$(TARGET).elf $(SUB_DIR)
	$(Q)$(DRONE) --host=$(HOST) status

# Listing of phony targets.
.PHONY : upload program
